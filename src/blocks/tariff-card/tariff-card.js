function initTariffCards() {
  const cardsAll = document.querySelectorAll('.tariff-card');
  if (!cardsAll.length) { return; }

  for (let i = 0; i < cardsAll.length; i++) {
    const card = cardsAll[i];

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ –ª–∏ —É–∂–µ —ç—Ç–∞ –∫–∞—Ä—Ç–æ—á–∫–∞
    if (card.dataset.initialized === 'true') {
      continue; // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —É–∂–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ
    }

    const moreBtn = card.querySelector('.tariff-card__more-btn');
    const returnBtn = card.querySelector('.tariff-card__back-btn');
    const flipElem = card.querySelector('.tariff-card__inner');
    const addIptv = card.querySelector('.tariff-card__iptv-btn');
    const chanSelect = card.querySelector('.tariff-card__form-wrapper');
    const closeChanSelectBtn = card.querySelector('.faq-btn--close');

    const moreBtnClickpriceHandler = () => {
      flipElem.classList.toggle('tariff-card__inner--backfaced');
    };

    const setBtnText = (button) => {
      const lang = getCurrentLang();
      const text = {
        uk: 'O–±–µ—Ä–∏—Ç—å –ø–∞–∫–µ—Ç IPTV',
        en: 'Select an IPTV package',
        ru: '–í—ã–±–µ—Ä–∏—Ç–µ –ø–∞–∫–µ—Ç IPTV',
      };
      button.textContent = text[lang] || text['uk'];
    }

    const addIptvHandler = () => {
      addIptv.style.display = 'none';
      chanSelect.style.display = 'flex';

      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –±–∞–∑–æ–≤—É—é —Ü–µ–Ω—É
      if (!card.dataset.basePrice) {
        const priceElement = card.querySelector('.tariff-card__opt-item--price strong');
        if (priceElement) {
          const currentPrice = priceElement.textContent.trim().replace(/\D+/g, '');
          card.dataset.basePrice = currentPrice;
        }
      }

      // –ü–æ–º–µ—á–∞–µ–º, —á—Ç–æ –º–æ–¥–∞–ª–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∞ –¥–ª—è —ç—Ç–æ–π –∫–∞—Ä—Ç–æ—á–∫–∏
      card.dataset.modalOpened = 'true';

      // –ö–ª–∏–∫–∞–µ–º –ø–æ –∫–Ω–æ–ø–∫–µ (–æ–Ω–∞ —Ç–µ–ø–µ—Ä—å –≤–∏–¥–∏–º–∞)
      const selectBtn = chanSelect.querySelector('.tariff-card__sel-btn');
      if (selectBtn) {
        selectBtn.click();
      }

      addIptv.removeEventListener('click', addIptvHandler);
    }

    const removeIptvHandler = () => {
      addIptv.style.display = 'flex';
      chanSelect.style.display = 'none';
      setBtnText(chanSelect.querySelector('.tariff-card__sel-btn>span'));
      addIptv.addEventListener('click', addIptvHandler);

      // –û–¢–ü–†–ê–í–õ–Ø–ï–ú –°–û–ë–´–¢–ò–ï –¥–ª—è —Å–±—Ä–æ—Å–∞ —Ü–µ–Ω—ã –∏ –¥–∞–Ω–Ω—ã—Ö
      card.dispatchEvent(new CustomEvent('iptv-reset'));
    }

    // –°–ª—É—à–∞–µ–º —Å–æ–±—ã—Ç–∏–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è UI
    card.addEventListener('iptv-ui-reset', () => {
      addIptv.style.display = 'flex';
      chanSelect.style.display = 'none';
      setBtnText(chanSelect.querySelector('.tariff-card__sel-btn>span'));

      // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞
      addIptv.removeEventListener('click', addIptvHandler);
      addIptv.addEventListener('click', addIptvHandler);
    });

    if (moreBtn && returnBtn) {
      moreBtn.addEventListener('click', moreBtnClickpriceHandler);
      returnBtn.addEventListener('click', moreBtnClickpriceHandler);
    }

    if (addIptv) {
      addIptv.addEventListener('click', addIptvHandler);
    }

    if (closeChanSelectBtn) {
      closeChanSelectBtn.addEventListener('click', removeIptvHandler);
    }

    // ‚úÖ –ü–û–ú–ï–ß–ê–ï–ú –ö–ê–†–¢–û–ß–ö–£ –ö–ê–ö –ò–ù–ò–¶–ò–ê–õ–ò–ó–ò–†–û–í–ê–ù–ù–£–Æ
    card.dataset.initialized = 'true';
    //console.log('‚úÖ –ö–∞—Ä—Ç–æ—á–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞:', card);
  }

  // ‚úÖ –ü–†–ò–ú–ï–ù–Ø–ï–ú –¢–ï–ö–£–©–£–Æ –¢–ï–ú–£ –ö –ù–û–í–´–ú –ö–ê–†–¢–û–ß–ö–ê–ú
  if (window.applyCurrentTheme) {
    window.applyCurrentTheme();
  } else {
    console.warn('‚ö†Ô∏è –§—É–Ω–∫—Ü–∏—è applyCurrentTheme –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
  }
}

// ‚úÖ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', initTariffCards);

// ‚úÖ –≠–ö–°–ü–û–†–¢–ò–†–£–ï–ú –§–£–ù–ö–¶–ò–Æ –≤ window –¥–ª—è –≤—ã–∑–æ–≤–∞ –∏–∑–≤–Ω–µ
window.initTariffCards = initTariffCards;

//console.log('üì¶ –§—É–Ω–∫—Ü–∏—è initTariffCards –¥–æ—Å—Ç—É–ø–Ω–∞ –≥–ª–æ–±–∞–ª—å–Ω–æ');
